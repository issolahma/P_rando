<?php
/**
 * ETML
 * Date: 01.06.2017
 * Shop
 */
include_once 'classes/ClientsRepository.php';

class AdddataController extends Controller
{

    /**
     * Dispatch current action
     *
     * @return mixed
     */
    public function display()
    {

        $action = $_GET['action'] . "Action";

        return call_user_func(array($this, $action));
    }

    /**
     * Display Index Action
     *
     * @return string
     */
    private function clientAction()
    {
        $clientRepo = new ClientsRepository();
        $medicList = $clientRepo->listMedicament();
        $sickList = $clientRepo->listSickness();

        $view = file_get_contents('view/pages/addData/addClient.php');

        ob_start();
        eval('?>' . $view);
        $content = ob_get_clean();

        return $content;
    }

    /**
     * Display Index Action
     *
     * @return string
     */
    private function addClientAction()
    {
        $clientRepo = new ClientsRepository();
        //$medicList = $clientRepo->listMedicament();
        //$sickList = $clientRepo->listSickness();
        $error_msg = '';


        //Check if client exist
        if ($clientRepo->findClient(htmlentities($_POST['firstname']), htmlentities($_POST['lastname'])) == null) {
            //Add client
            $clientRepo->addClient($_POST);
        } else {
            $error_msg = 'Un client avec les mêmes nom et prénom est déjà présent dans la base de donnée';
            $view = file_get_contents('view/pages/addData/addClient.php');
        }

        //TODO undefine $view
        ob_start();
        eval('?>' . $view);
        $content = ob_get_clean();

        return $content;
    }

    /**
     *
     *
     */
    private function clientsAjaxAction(){
        $clientRepo = new ClientsRepository();
        $listClients = $clientRepo->findAll($_POST);

        $filtered_rows = count($listClients); //->rowCount();
			//TODO $allRecords = $listClients->rowCount();			
			
        foreach ($listClients as $row) {
        	if($row['cliActive'] == 1){
            $sub_array = array();
            $sub_array[] = $row["cliLastName"];
            $sub_array[] = $row["cliFirstName"];
            $sub_array[] = $row["cliCity"];                    
            $sub_array[] = '<button type="button" name="update" id="' . $row["idClient"] . '" class="btn btn-warning btn-xs update">Modifier</button>';
            $sub_array[] = '<button type="button" name="delete" id="' . $row["idClient"] . '" class="btn btn-danger btn-xs delete">Supprimer</button>';
            $data[] = $sub_array;
            }
        }
        $output = array(
            "draw" => intval($_POST["draw"]),
            "recordsTotal" => $filtered_rows,
            //"recordsFiltered"	=>	$allRecords,
            "data" => $data
        );


        echo json_encode($output);
    }

//TODO TO FINISH checkbox
	private function clientsAjaxUpdateAction(){
		$clientRepo = new ClientsRepository();
		$client = $clientRepo->findOne($_POST['user_id']);
		
		foreach ($client as $row){
			$output["firstname"] = $row["cliFirstName"];
			$output["lastname"] = $row["cliLastName"];
			$output["city"] = $row["cliCity"];
			$output["email"] = $row["cliEmail"];
			$output["cliPhone"] = $row["cliMobilePhone"];
			$output["npa"] = $row["cliNPA"];	
			$output["street"] = $row["cliStreet"];
			$output["streetNb"] = $row["cliStreetNum"];
			$output["urgencyPhone"] = $row["cliUrgencyPhone"];	
		}
		
		echo json_encode($output);
	}
	
	private function clientsAjaxDeleteAction(){
		$clientRepo = new ClientsRepository();
		$client = $clientRepo->hideOne($_POST['user_id']);
	}
}